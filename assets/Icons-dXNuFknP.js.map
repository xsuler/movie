{"version":3,"file":"Icons-dXNuFknP.js","sources":["../../src/utils/language.ts"],"sourcesContent":["import countryLanguages, { LanguageObj } from \"@ladjs/country-language\";\nimport { getTag } from \"@sozialhelden/ietf-language-tags\";\n\nconst languageOrder = [\"en\", \"hi\", \"fr\", \"de\", \"nl\", \"pt\"];\n\n// mapping of language code to country code.\n// multiple mappings can exist, since languages are spoken in multiple countries.\n// This mapping purely exists to prioritize a country over another in languages.\n// iso639_1 -> iso3166 Alpha-2\nconst countryPriority: Record<string, string> = {\n  en: \"gb\",\n  nl: \"nl\",\n  fr: \"fr\",\n  de: \"de\",\n  pt: \"pt\",\n  ar: \"sa\",\n  es: \"es\",\n  zh: \"cn\",\n  ko: \"kr\",\n  ta: \"lk\",\n  gl: \"es\",\n};\n\n// list of iso639_1 Alpha-2 codes used as default languages\nconst defaultLanguageCodes: string[] = [\n  \"en-US\",\n  \"cs-CZ\",\n  \"de-DE\",\n  \"fr-FR\",\n  \"pt-BR\",\n  \"it-IT\",\n  \"nl-NL\",\n  \"pl-PL\",\n  \"tr-TR\",\n  \"vi-VN\",\n  \"zh-CN\",\n  \"he-IL\",\n  \"sv-SE\",\n  \"lv-LV\",\n  \"th-TH\",\n  \"ne-NP\",\n  \"ar-SA\",\n  \"es-ES\",\n  \"et-EE\",\n  \"bg-BG\",\n  \"bn-BD\",\n  \"el-GR\",\n  \"fa-IR\",\n  \"gu-IN\",\n  \"id-ID\",\n  \"ja-JP\",\n  \"ko-KR\",\n  \"sl-SI\",\n  \"ta-LK\",\n  \"ru-RU\",\n  \"gl-ES\",\n];\n\nexport interface LocaleInfo {\n  name: string;\n  nativeName?: string;\n  code: string;\n  isRtl?: boolean;\n}\n\nconst extraLanguages: Record<string, LocaleInfo> = {\n  pirate: {\n    code: \"pirate\",\n    name: \"Pirate\",\n    nativeName: \"Pirate Tongue\",\n  },\n  minion: {\n    code: \"minion\",\n    name: \"Minion\",\n    nativeName: \"Minionese\",\n  },\n  tok: {\n    code: \"tok\",\n    name: \"Toki pona\",\n    nativeName: \"Toki pona\",\n  },\n};\n\nfunction populateLanguageCode(language: string): string {\n  if (language.includes(\"-\")) return language;\n  if (language.length !== 2) return language;\n  return (\n    defaultLanguageCodes.find((v) => v.startsWith(`${language}-`)) ?? language\n  );\n}\n\n/**\n * @param locale idk what kinda code this takes, anytihhng in ietf format I guess\n * @returns pretty format for language, null if it no info can be found for language\n */\nexport function getPrettyLanguageNameFromLocale(locale: string): string | null {\n  const tag = getTag(populateLanguageCode(locale), true);\n  const lang = tag?.language?.Description?.[0] ?? null;\n  if (!lang) return null;\n\n  const region = tag?.region?.Description?.[0] ?? null;\n  let regionText = \"\";\n  if (region) regionText = ` (${region})`;\n\n  return `${lang}${regionText}`;\n}\n\n/**\n * Sort locale codes by occurance, rest on alphabetical order\n * @param langCodes list language codes to sort\n * @returns sorted version of inputted list\n */\nexport function sortLangCodes(langCodes: string[]) {\n  const languagesOrder = [...languageOrder].reverse(); // Reverse is neccesary, not sure why\n\n  const results = langCodes.sort((a, b) => {\n    const langOrderA = languagesOrder.findIndex(\n      (v) => a.startsWith(`${v}-`) || a === v,\n    );\n    const langOrderB = languagesOrder.findIndex(\n      (v) => b.startsWith(`${v}-`) || b === v,\n    );\n    if (langOrderA !== -1 || langOrderB !== -1) return langOrderB - langOrderA;\n\n    return a.localeCompare(b);\n  });\n\n  return results;\n}\n\n/**\n * Get country code for locale\n * @param locale input locale\n * @returns country code or null\n */\nexport function getCountryCodeForLocale(locale: string): string | null {\n  let output: LanguageObj | null = null as any as LanguageObj;\n  const tag = getTag(locale, true);\n\n  if (!tag?.language?.Subtag) return null;\n  // this function isnt async, so its garuanteed to work like this\n  countryLanguages.getLanguage(tag.language.Subtag, (_err, lang) => {\n    if (lang) output = lang;\n  });\n  if (!output) return null;\n  const priority = countryPriority[output.iso639_1.toLowerCase()];\n  if (output.countries.length === 0) {\n    return priority ?? null;\n  }\n  if (priority) {\n    const priotizedCountry = output.countries.find(\n      (v) => v.code_2.toLowerCase() === priority,\n    );\n    if (priotizedCountry) return priotizedCountry.code_2.toLowerCase();\n  }\n  return output.countries[0].code_2.toLowerCase();\n}\n\n/**\n * Get information for a specific local\n * @param locale local code\n * @returns locale object\n */\nexport function getLocaleInfo(locale: string): LocaleInfo | null {\n  const realLocale = populateLanguageCode(locale);\n  const extraLang = extraLanguages[realLocale];\n  if (extraLang) return extraLang;\n\n  const tag = getTag(realLocale, true);\n  if (!tag?.language?.Subtag) return null;\n\n  let output: LanguageObj | null = null as any as LanguageObj;\n  // this function isnt async, so its garuanteed to work like this\n  countryLanguages.getLanguage(tag.language.Subtag, (_err, lang) => {\n    if (lang) output = lang;\n  });\n  if (!output) return null;\n\n  const extras = [];\n  if (tag.region?.Description) extras.push(tag.region.Description[0]);\n  if (tag.script?.Description) extras.push(tag.script.Description[0]);\n  const extraStringified = extras.map((v) => `(${v})`).join(\" \");\n\n  return {\n    code: tag.parts.langtag ?? realLocale,\n    isRtl: output.direction === \"RTL\",\n    name: output.name[0] + (extraStringified ? ` ${extraStringified}` : \"\"),\n    nativeName: output.nativeName[0] ?? undefined,\n  };\n}\n"],"names":["languageOrder","countryPriority","en","nl","fr","de","pt","ar","es","zh","ko","ta","gl","defaultLanguageCodes","extraLanguages","pirate","code","name","nativeName","minion","tok","populateLanguageCode","language","includes","length","find","v","startsWith","getPrettyLanguageNameFromLocale","locale","tag","getTag","lang","Description","region","regionText","sortLangCodes","langCodes","languagesOrder","reverse","results","sort","a","b","langOrderA","findIndex","langOrderB","localeCompare","getCountryCodeForLocale","output","Subtag","countryLanguages","getLanguage","_err","priority","iso639_1","toLowerCase","countries","priotizedCountry","code_2","getLocaleInfo","realLocale","extraLang","extras","push","script","extraStringified","map","join","parts","langtag","isRtl","direction","undefined"],"mappings":"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"}